/* variable 'p' allocated 24 bytes of storage at offset 0 */
/* variable 's' allocated vreg 10 */
/* Function 'main' uses 24 bytes of memory and 11 virtual registers */
	.section .text

	.globl main
main:
	enter    $24
	localaddr vr11, $0
	mov_q    vr12, $0
	add_q    vr13, vr11, vr12
	mov_l    vr14, $0
	sconv_lq vr15, vr14
	mul_q    vr16, vr15, $1
	add_q    vr17, vr13, vr16
	mov_b    vr18, $65
	mov_b    (vr17), vr18
	localaddr vr19, $0
	mov_q    vr20, $0
	add_q    vr21, vr19, vr20
	mov_l    vr22, $1
	sconv_lq vr23, vr22
	mul_q    vr24, vr23, $1
	add_q    vr25, vr21, vr24
	mov_b    vr26, $108
	mov_b    (vr25), vr26
	localaddr vr27, $0
	mov_q    vr28, $0
	add_q    vr29, vr27, vr28
	mov_l    vr30, $2
	sconv_lq vr31, vr30
	mul_q    vr32, vr31, $1
	add_q    vr33, vr29, vr32
	mov_b    vr34, $105
	mov_b    (vr33), vr34
	localaddr vr35, $0
	mov_q    vr36, $0
	add_q    vr37, vr35, vr36
	mov_l    vr38, $3
	sconv_lq vr39, vr38
	mul_q    vr40, vr39, $1
	add_q    vr41, vr37, vr40
	mov_b    vr42, $99
	mov_b    (vr41), vr42
	localaddr vr43, $0
	mov_q    vr44, $0
	add_q    vr45, vr43, vr44
	mov_l    vr46, $4
	sconv_lq vr47, vr46
	mul_q    vr48, vr47, $1
	add_q    vr49, vr45, vr48
	mov_b    vr50, $101
	mov_b    (vr49), vr50
	localaddr vr51, $0
	mov_q    vr52, $0
	add_q    vr53, vr51, vr52
	mov_l    vr54, $5
	sconv_lq vr55, vr54
	mul_q    vr56, vr55, $1
	add_q    vr57, vr53, vr56
	mov_l    vr58, $0
	mov_b    (vr57), vr58
	localaddr vr59, $0
	mov_q    vr60, $20
	add_q    vr61, vr59, vr60
	mov_l    vr62, $43
	mov_l    (vr61), vr62
	localaddr vr63, $0
	mov_q    vr64, $0
	add_q    vr65, vr63, vr64
	mov_q    vr10, vr65
	mov_q    vr1, vr10
	call     print_str
	call     print_nl
	localaddr vr66, $0
	mov_q    vr67, $20
	add_q    vr68, vr66, vr67
	mov_l    vr1, (vr68)
	call     print_i32
	call     print_nl
	mov_l    vr69, $0
	mov_l    vr0, vr69
	jmp      .Lmain_return
	jmp      .Lmain_return
.Lmain_return:
	leave    $24
	ret      
